package main

import "fmt"

var dp [][]int

func min(a, b int) int {
	if a > b {
		return b
	}
	return a
}
func minimumDeleteSum(s string, p string) int {
	m := len(s)
	n := len(p)
	dp = make([][]int, m+1)
	for i := 0; i < len(dp); i++ {
		dp[i] = make([]int, n+1)
	}
	dp[0][0] = 0
	for i := 1; i <= m; i++ {
		dp[i][0] = dp[i-1][0] + int(s[i-1])
	}
	for j := 1; j <= n; j++ {
		dp[0][j] = dp[0][j-1] + int(p[j-1])
	}
	for i := 1; i <= m; i++ {
		for j := 1; j <= n; j++ {
			ci := i - 1
			cj := j - 1
			if s[ci] == p[cj] {
				dp[i][j] = dp[i-1][j-1]
			} else {
				dp[i][j] = min(dp[i-1][j-1]+int(s[ci])+int(p[cj]), dp[i-1][j]+int(s[ci]))
				dp[i][j] = min(dp[i][j], dp[i][j-1]+int(p[cj]))
			}
		}
	}

	return dp[m][n]
}

func main() {
	fmt.Println(minimumDeleteSum("sea", "eat"))
}
