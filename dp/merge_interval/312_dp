package main

import "fmt"

func max(a, b int) int {
	if a > b {
		return a
	}
	return b
}

func maxCoins(nums []int) int {
	n := len(nums)
	N := n + 2
	b := make([]int, N)
	dp := make([][]int, N)
	for i := 0; i < len(dp); i++ {
		dp[i] = make([]int, N)
	}
	b[0] = 1
	copy(b[1:], nums)
	b[N-1] = 1
	// for j := 0; j < len(dp); j++ {
	// 	dp[i][j] = b[j]
	// }

	for l := 3; l <= N; l++ {
		for i := 0; i < N-l+1; i++ {
			j := i + l - 1
			bond := b[i] * b[j]
			for last := i + 1; last < j; last++ {
				v := bond*b[last] + dp[i][last] + dp[last][j]
				dp[i][j] = max(dp[i][j], v)
			}
		}
	}
	return dp[0][N-1]
}

func main() {
	fmt.Println(maxCoins([]int{3, 1, 5, 8}))
}
