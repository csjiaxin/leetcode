package main

import (
	"fmt"
)

func min(a, b int) int {
	if a > b {
		return b
	}
	return a
}
func max(a, b int) int {
	if a > b {
		return a
	}
	return b
}

func numTrees(n int) int {
	dp := make([][]int, n)
	for i := 0; i < n; i++ {
		dp[i] = make([]int, n)
	}
	for i := 0; i < n; i++ {
		dp[i][i] = 1
	}
	for l := 2; l <= n; l++ {
		for i := 0; i+l-1 < n; i++ {
			j := i + l - 1

			//i is root
			dp[i][j] += dp[i+1][j]
			//j is root
			dp[i][j] += dp[i][j-1]
			for left := i + 1; left < j; left++ {
				// left is root
				//[i:left] -> left tree
				v := dp[i][left-1] * dp[left+1][j]
				dp[i][j] += v
			}
		}
	}
	return dp[0][n-1]
}

func main() {
	fmt.Println(numTrees(3))
	fmt.Println(numTrees(1))
}
