package main

import (
	"fmt"
	"sort"
)

func IntLess(a, b int) bool {
	return a < b
}
func left(nums []int, target int) int {
	l := 0
	h := len(nums) - 1

	for l <= h {
		m := (l + h) // 2
		if nums[m] > target {
			h = m - 1
		} else if nums[m] < target {
			l = m + 1
		} else {
			h = m - 1
		}
	}
	if l < len(nums) && nums[l] == target {
		return l
	}
	return -1
}
func right(nums []int, target int) int {
	l := 0
	h := len(nums) - 1

	for l <= h {
		m := (l + h) / 2
		if nums[m] > target {
			h = m - 1
		} else if nums[m] < target {
			l = m + 1
		} else {
			l = m + 1
		}
	}
	if h >= 0 && nums[h] == target {
		return h
	}
	return -1
}
func targetIndices(nums []int, target int) []int {
	// utils.Sort(nums, utils.IntComparator)
	sort.Ints(nums)
	l := left(nums, target)
	r := right(nums, target)
	if l == -1 {
		return []int{}
	}
	ret := []int{}
	for l <= r {
		ret = append(ret, l)
		l += 1

	}

	return ret
}

func main() {
	fmt.Println(targetIndices([]int{1}, 2))
	// fmt.Println(targetIndices([]int{1, 2, 5, 2, 3}, 2))
}
