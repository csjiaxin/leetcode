package main

import (
	"fmt"
	"math"
)

func max(a, b int) int {
	if a > b {
		return a
	}
	return b
}

func networkDelayTime(times [][]int, n int, k int) int {
	dist := make([]int, n+1)
	for i := 1; i <= n; i++ {
		dist[i] = math.MaxInt
	}
	dist[k] = 0
	for i := 1; i <= n; i++ {
		for _, e := range times {
			if dist[e[0]] != math.MaxInt && dist[e[0]]+e[2] < dist[e[1]] {
				dist[e[1]] = dist[e[0]] + e[2]
			}
		}
	}
	m := 0
	for i := 1; i <= n; i++ {
		m = max(m, dist[i])
	}
	if m == math.MaxInt {
		return -1
	}
	return m
}

func main() {
	fmt.Println(networkDelayTime([][]int{{2, 1, 1}, {2, 3, 1}, {3, 4, 1}}, 4, 2))
}
